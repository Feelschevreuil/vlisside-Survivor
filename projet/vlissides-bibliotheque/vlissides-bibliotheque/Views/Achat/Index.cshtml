@model AchatVM 

<p class="fs-2">Achat</p>

@{
    string classesAlerteAdaptes;
    string messageAlerte;

    if(Model.StatutFacture ==  StatutFactureEnum.ATTENTE_PAIEMENT)
    {

        <div class="alert alert-primary" role="alert">
            Cher <strong>@Model.NomEtudiant</strong>, vos articles sont réservés pour 15 minutes. Veuillez procéder au paiement.
        </div>
    }
    else if(Model.StatutFacture == StatutFactureEnum.TRANSIT)
    {

        <div class="alert alert-info" role="alert">
            Merci, cher <strong>@Model.NomEtudiant</strong>, votre commande est en transit. Prévoyez un délai maximum de 48 heures.
        </div>
    }
    else if(Model.StatutFacture == StatutFactureEnum.LIVREE)
    {

        <div class="alert alert-success" role="alert">
            Merci, cher <strong>@Model.NomEtudiant</strong> pour nous avoir choisi et bonne lecture!
        </div>
    }
    else if(Model.StatutFacture == StatutFactureEnum.ANNULEE_NON_PAYE_DELAIS)
    {

        <div class="alert alert-danger" role="alert">
            Annulée dû au non paiement après 15 minutes de réservation.
        </div>
    }
    else
    {

        <div class="alert alert-danger" role="alert">
            Commande annulée.
        </div>
    }
}

<br>

<div class="container">
    <div class="row">
        <div class="col-8">

            <div class="accordion" id="accordionInformationsPaiement">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <img class="me-2" width="24px" src="~/img/map.svg" />
                            Adresse de livraison
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionInformationsPaiement">
                        <div class="accordion-body">

                            @{
                                if(Model.StatutFacture ==  StatutFactureEnum.ATTENTE_PAIEMENT)
                                {
                                    <p>Veuillez noter que nous ne livrons qu'au Québec uniquement et que les délais de livraisons sont de <strong>3 jours ouvrables</strong> suite au paiement de la commande.</p>

                                    @Html.Partial("_AdresseCommande", @Model.AchatInformationsLivraison)

                                    <p class="mb-0">En continuant à payer la commande, vous confirmez que vous avez entré une adresse de livraison <strong>valide</strong>.</p>

                                    <button id="btnconfirmerAdresse" class="btn btn-primary mt-3">Confirmer l'adresse</button>
                                }
                                else if(Model.StatutFacture == StatutFactureEnum.TRANSIT || Model.StatutFacture == StatutFactureEnum.LIVREE)
                                {
                                    <p class="mb-0"><strong>Votre commande @(Model.StatutFacture == StatutFactureEnum.TRANSIT ? "sera" : "a été") livrée au</strong></p>
                                    <p class="mb-0">@Model.AchatInformationsLivraison.AdresseLivraison.NumeroCivique @Model.AchatInformationsLivraison.AdresseLivraison.App @Model.AchatInformationsLivraison.AdresseLivraison.Rue<br>@Model.AchatInformationsLivraison.AdresseLivraison.Ville QC @Model.AchatInformationsLivraison.AdresseLivraison.CodePostal</p>
                                }
                                else
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/not-paid.svg" />
                                        <span class="col-11 align-middle">Aucune information de livraison.</span>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>

                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <img class="me-2" width="24px" src="~/img/credit-card.svg" />
                            Détails de paiement
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionInformationsPaiement">
                        <div class="accordion-body">

                            @{
                                if(Model.StatutFacture ==  StatutFactureEnum.ATTENTE_PAIEMENT)
                                {
                                    <p>Paiement <strong>sécurisé</strong> en ligne.</p>

                                    <form id="payment-form">
                                          <div id="payment-element">
                                                <!-- Elements will create form elements here -->
                                                </div>
                                                    <button id="submit" class="btn btn-primary mt-3">Payer</button>
                                                <div id="error-message">
                                                <!-- Display error message to your customers here -->
                                          </div>
                                    </form>                                }
                                else if(Model.StatutFacture == StatutFactureEnum.TRANSIT || Model.StatutFacture == StatutFactureEnum.LIVREE)
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/check-circle.svg" />
                                        <span class="col-11 align-middle">Commande payée avec succès! <strong>Merci!</strong></span>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/not-paid.svg" />
                                        <span class="col-11 align-middle">Aucune information de paiement.</span>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>

                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            <img class="me-2" width="24px" src="~/img/package.svg" />
                            Statut de la commande
                        </button>
                    </h2>

                    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionInformationsPaiement">
                        <div class="accordion-body">

                            @{
                                if(Model.StatutFacture ==  StatutFactureEnum.ATTENTE_PAIEMENT)
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/clock.svg" />
                                        <span class="col-11 align-middle">En attente de paiement. Réservée pour <strong>15 minutes</strong>.</span>
                                    </div>
                                }
                                else if(Model.StatutFacture == StatutFactureEnum.TRANSIT)
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/truck-fast.svg" />
                                        <span class="col-11 align-middle">En transit. Prévoyez <strong>3 jours ouvrables</strong>.</span>
                                    </div>
                                }
                                else if(Model.StatutFacture == StatutFactureEnum.LIVREE)
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/check-circle.svg" />
                                        <span class="col-11 align-middle">Commande livrée avec succès! <strong>Merci!</strong>.</span>
                                    </div>
                                }
                                else if(Model.StatutFacture == StatutFactureEnum.ANNULEE_NON_PAYE_DELAIS)
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/not-paid.svg" />
                                        <span class="col-11 align-middle">Commande non payée dans un délai de <strong>15 minutes</strong>. Réservation annulée.</span>
                                    </div>
                                }
                                else
                                {

                                    <div class="row">
                                        <img class="col-1" width="24px" src="~/img/close-circle.svg" />
                                        <span class="col-11 align-middle">Commande annulée.</span>
                                    </div>

                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-4">

        @{
            int nombreLivres;

            nombreLivres = Model.GetNombreCommandesPartielles();
        }

        <div class="card">
            <div class="card-body p-0">
                <div class="row p-3">
                    <img class="col-2" width="24px" src="~/img/book-open.svg" />
                    <h5 class="card-title col-8 ps-0">Livre@(nombreLivres > 1 ? "s" : "")</h5>
                    <div class="col-2">
                        <span class="badge alert-info align-middle">@nombreLivres</span>
                    </div>
                </div>

                <!-- TODO: sortir dans son propre fichier CSS -->
                <div class="border-top border-bottom mb-3 p-3" style="max-height: 200px; overflow-y: auto; overflow-x: hidden;">
                    @{
                        bool besoinInitialiserTooltip;

                        besoinInitialiserTooltip = false;

                        foreach(CommandePartielle commandePartielle in Model.CommandesPartielles)
                        {

                            if(commandePartielle.StatutCommande != StatutCommandeEnum.INEXISTANT)
                            {
                                <div class="row mb-3">

                                    <div class="col-6">
                                        <span class="align-middle">
                                            <h6 class="mb-0 text-truncate">@commandePartielle.Titre</h6>
                                            
                                            @{
                                                @if(commandePartielle.StatutCommande == StatutCommandeEnum.CORRECT)
                                                {

                                                    <p class="badge alert-info mb-0 col-9">@EtatLivreEnumUtils.GetNomCompletEtatLivre(commandePartielle.EtatLivre).ToUpper()</p>
                                                }
                                                else if(commandePartielle.StatutCommande == StatutCommandeEnum.MANQUE_INVENTAIRE)
                                                {

                                                    if(!besoinInitialiserTooltip)
                                                        besoinInitialiserTooltip = true;

                                                    <p class="badge alert-danger mb-0 col-10" data-bs-toggle="tooltip" data-bs-title="Ce livre n'est plus disponible à l'état désiré, il ne sera pas chargé.">STOCK ÉCOULÉ</p>
                                                }
                                                else if(commandePartielle.StatutCommande == StatutCommandeEnum.QUANTITEE_CORRIGE_SELON_DISPONIBILITE)
                                                {

                                                    if(!besoinInitialiserTooltip)
                                                        besoinInitialiserTooltip = true;

                                                    <p class="badge alert-warning mb-0 col-10" data-bs-toggle="tooltip" data-bs-title="Ce livre n'est pas disponible à la quantité désirée, la quantité à alors été corrigée selon les disponibilitées.">STOCK LIMITÉ</p>
                                                }
                                            }
                                        </span>
                                    </div>
                                    <div class="col-2">
                                        <span class="badge alert-info align-middle">@commandePartielle.Quantite</span>
                                    </div>
                                    <div class="col-4">
                                        <span class="align-middle text-end">
                                            <strong>@CashUtils.FormatToCurrency(commandePartielle.Prix)</strong>
                                        </span>
                                    </div>
                                </div>

                            }
                        }

                        if(besoinInitialiserTooltip)
                        {
                            <script>
                                const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
                                const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
                            </script>
                        }
                    }
                </div>

                @{
                    double totalCommandes;
                    string totalCommandesFormate;
                    double totalCommandesAvecTaxes;
                    string totalCommandesAvecTaxesFormate;
                    double taxes;
                    string taxesFormate;

                    totalCommandes = CommandeEtudiantService
                        .GetTotalCommandesPartielles(Model.CommandesPartielles);

                    totalCommandesFormate = CashUtils.FormatToCurrency(totalCommandes);

                    totalCommandesAvecTaxes = CashUtils
                        .CalculerTaxes(totalCommandes, Model.Tps, Model.Tvq);

                    totalCommandesAvecTaxesFormate = CashUtils
                        .FormatToCurrency(totalCommandesAvecTaxes);

                    taxes = totalCommandesAvecTaxes - totalCommandes;

                    taxesFormate = CashUtils.FormatToCurrency(taxes);
                }

                <div class="row pe-3 ps-3">
                    <p class="col-7 text-end">Total avant taxes</p>
                    <p class="col-5 text-end">@totalCommandesFormate</p>
                </div>

                <div class="row pe-3 ps-3">
                    <p class="col-7 text-end">Taxes</p>
                    <p class="col-5 text-end">@taxesFormate</p>
                </div>

                <div class="row pe-3 ps-3 pb-3">
                    <p class="col-7 mb-0 text-end"><strong>Total</strong></p>
                    <p class="col-5 mb-0 text-end"><strong>@totalCommandesAvecTaxesFormate</strong></p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    
    let btnConfirmerAdresse = document.querySelector("btnConfirmerAdresse");
    btnConfirmerAdresse.onclick = confirmerAdresse;

    function confirmerAdresse() {
    }
    

</script>

@{
    if(Model.StatutFacture == StatutFactureEnum.ATTENTE_PAIEMENT)
    {

        <script src="https://js.stripe.com/v3/"></script>

        <script>

            /** TODO: à sortir dans son propre fichier **/
            const stripe = Stripe(
                "@Model.PublicApiKey"
            );

            const options = {
                      clientSecret: "@Model.ClientSecret"
            };

            // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 3
            const elements = stripe.elements(options);

            // Create and mount the Payment Element
            const paymentElement = elements.create('payment');
            paymentElement.mount('#payment-element');

            var form = document.querySelector("#payment-form");

            form.addEventListener('submit', async (event) => {
                event.preventDefault();

                const {error} = await stripe.confirmPayment({
                    //`Elements` instance that was used to create the Payment Element
                    elements,
                    confirmParams: {
                                return_url: 'https://example.com/order/123/complete',
                              },
                                redirect: 'if_required'
                    });

                if (error) {
                  // This point will only be reached if there is an immediate error when
                  // confirming the payment. Show error to your customer (for example, payment
                              // details incomplete)
                  const messageContainer = document.querySelector('#error-message');
                  messageContainer.textContent = error.message;
                } else {

                    const modalPaiementConfirmation = new bootstrap.Modal('#paiementConfirmation', {
                        keyboard: false
                    });

                    modalPaiementConfirmation.show();
                }
            });

            function rechargerPage() {
                window.location.reload();
                return false;
            }

        </script>
    }
}

<div class="modal fade" id="paiementConfirmation" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="paiementConfirmationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="paiementConfirmationLabel">Confirmation de paiement</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="rechargerPage()"></button>
            </div>
            <div class="modal-body">
                <div class="row justify-content-md-center">
                    <img class="col-4 mb-3" width="24px" src="~/img/check-circle.svg" />
                    <p>Commande payée avec succès! Merci <strong>@Model.NomEtudiant</strong>!</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="rechargerPage()">Fermer</button>
            </div>
        </div>
    </div>
</div>
